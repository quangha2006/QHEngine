apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "com.android.QHEngine"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

		sourceSets.main {
		manifest.srcFile './AndroidManifest.xml'
		java.srcDirs = ['./src']
		res.srcDirs = ['./res']
		assets.srcDirs = ['./assets']
		jniLibs.srcDir './libs'
	}
  
    signingConfigs {
		release {
			storeFile file("./key.keystore")
			storePassword "123456"
			keyAlias "QuangHa"
			keyPassword "123456"
		}
	}
  
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            ndk {
                abiFilters "armeabi-v7a", "arm64-v8a"
            }
        }
        debug {
            debuggable true
            signingConfig signingConfigs.release
            ndk {
                abiFilters "armeabi-v7a", "arm64-v8a"
            }
        }
    }
		gradle.taskGraph.beforeTask { Task task ->
		if (task.name.equals('externalNativeBuildDebug'))
		{
			task.enabled = false
			if (!(project.hasProperty('skipNativeBuild') && skipNativeBuild.toBoolean()))
			{
				externalNativeFastBuildTaskBuilder('debug').execute()
			}
		}
		if (task.name.equals('externalNativeBuildRelease'))
		{
			task.enabled = false
			if (!(project.hasProperty('skipNativeBuild') && skipNativeBuild.toBoolean()))
			{
				externalNativeFastBuildTaskBuilder('release').execute()
			}
		}
	}
    externalNativeBuild {
        ndkBuild {
            path 'jni/Android.mk'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:26.1.0'
    testImplementation 'junit:junit:4.12'
}
def externalNativeFastBuildTaskBuilder(buildType)
{
	return tasks.create(name: 'externalNativeFastBuild', type: Exec) {
		println ':' + project.name + ':' + name
		
		commandLine '../scripts/build_native.bat', buildType, 'armeabi-v7a'
	}
}
