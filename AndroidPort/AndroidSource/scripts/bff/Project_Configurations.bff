// *************************************************************************************** //
// if active: clang++.exe, if commented: g++.exe
#define USE_CLANG

// if active: use Compile Units. if commented: compile each file one-by-one
#define USE_COMPILE_UNITS

// *************************************************************************************** //
#include "Main_Paths.bff"
#include "Compile/__Common/__Build_System.bff"

// *************************************************************************************** //
// ARM; x86
// Release; Debug
.Base_Config =
[
	.Defines 				= " -D__ANDROID__"
							+ " -DOS_ANDROID"
							+ " -DANDROID"
							+ " -D_ANDROID"
							+ " -DANDROID_NDK"
							+ " -DGAME_ANDROID"
							+ " -DANDROID_STL=c++_shared"

	.IncludePaths 			= " -I$LLVMSysroot$\usr\include"

	.CompileFlags 			= ""
							
	.CompileFlags_CPP 		= " -Werror=implicit-function-declaration -c -std=c++11 -fPIC"; -stdlib=libc++" ;cheat to build zlib
	.CompileFlags_C 		= " -std=c11"
	.Precompiled_SearchPaths= ""
	.LinkerExecutable 		= "$NDKToolchainClangRoot$\clang++.exe"
]

// *************************************************************************************** //
// ARM
// Release; Debug
.ARM_Config =
[
	Using(.Base_Config)
	.PlatformName			= "ARM"
	.Defines				+ " -D__ARM_NEON__"
							+ " -D__ARM_ARCH_7__"
							+ " -D__clang__"
							+ " -D__ANDROID_API__=21"

	.IncludePaths			+ " -I$LLVMSysroot$\usr\include\c++\v1"

	.CompileFlags			+ '  -ftree-vectorize'
							+ '  -ffunction-sections'
							+ '  -fdata-sections'
							+ '  -funwind-tables'
							+ '  -fstack-protector'
							+ '  -no-canonical-prefixes'
							+ '  -fstrict-aliasing'
							+ '  -fsigned-char'
							+ '  -fvisibility=hidden'
							+ '  -fcolor-diagnostics'
							+ '  -Wno-extern-c-compat'
							+ '  -target armv7-none-linux-androideabi$NATIVE_API_LEVEL$'
							+ '  -marm'
							+ '  -march=armv7-a'
							+ '  -mtune=krait'
							+ '  -mfloat-abi=softfp'
							+ '  -mfpu=neon-vfpv4'
							+ '  -pipe'
							+ '  -g'
							+ '  -Wno-write-strings'
							+ '  -fassociative-math'
							+ '  -freciprocal-math'
							+ '  -funroll-loops'

	.Librarian				= "$NDKToolchainClangRoot$\arm-linux-androideabi-ar.exe"
	.ObjectCopyExecutable 	= "$NDKToolchainClangRoot$\arm-linux-androideabi-objcopy.exe"
	.StripExecutable		= "$NDKToolchainClangRoot$\arm-linux-androideabi-strip.exe"
]

// *************************************************************************************** //
// ARM
// Release
.ARM_Release_Config =
[
	Using(.ARM_Config)
	.ConfigName				= "Release"
	.Defines				+ " -DANDROID_RELEASE"
							+ " -DNDEBUG"
							+ " -DNDK_DEBUG=0"

	.CompileFlags			+ " -Ofast -ffast-math"
							
	.Precompiled_SearchPaths+ " -L$precompiled_search_Paths$/$ConfigName$/armeabi-v7a"
	
	.Output_Objects			= "$OutputPath$\$PlatformName$\$ConfigName$\Objects"
	.Output_StaticLibs		= "$OutputPath$\$PlatformName$\$ConfigName$\StaticLibs"
	.Output_SharedLibs		= "$OutputPath$\$PlatformName$\$ConfigName$\SharedLibs"
]

// *************************************************************************************** //
// ARM
// Debug
.ARM_Debug_Config =
[
	Using(.ARM_Config)
	.ConfigName				= "Debug"
	.Defines				+ " -D_DEBUG"
							+ " -DDEBUG"

	.CompileFlags			+ " -O0"

	.Precompiled_SearchPaths+ " -L$precompiled_search_Paths$/$ConfigName$/armeabi-v7a"

	.Output_Objects = "$OutputPath$/$PlatformName$/$ConfigName$/Objects"
	.Output_StaticLibs = "$OutputPath$/$PlatformName$/$ConfigName$/StaticLibs"
	.Output_SharedLibs = "$OutputPath$/$PlatformName$/$ConfigName$/SharedLibs"
]
// *************************************************************************************** //
// ARM64
// Release; Debug
.ARM64_Config =
[
	Using(.Base_Config)
	.PlatformName			= "ARM64"
	.Defines				+ " -D__ARMV8__"
							+ " -D__clang__"
							+ " -D__ANDROID_API__=21"

	.IncludePaths			+ " -I$LLVMSysroot$\usr\include\c++\v1"

	.CompileFlags			+ '  -ftree-vectorize'
							+ '  -ffunction-sections'
							+ '  -fdata-sections'
							+ '  -funwind-tables'
							+ '  -fstack-protector'
							+ '  -no-canonical-prefixes'
							+ '  -fstrict-aliasing'
							+ '  -fsigned-char'
							+ '  -fvisibility=hidden'
							+ '  -fcolor-diagnostics'
							+ '  -Wno-extern-c-compat'
							+ '  -target aarch64-none-linux-android$NATIVE_API_LEVEL$'

	.Librarian				= "$NDKToolchainClangRoot$\aarch64-linux-android-ar.exe"
	.ObjectCopyExecutable 	= "$NDKToolchainClangRoot$\llvm-objcopy.exe"
	.StripExecutable		= "$NDKToolchainClangRoot$\llvm-strip.exe"
]
// *************************************************************************************** //
// ARM64
// Release
.ARM64_Release_Config =
[
	Using(.ARM64_Config)
	.ConfigName				= "Release"
	.Defines				+ " -DANDROID_RELEASE"
							+ " -DNDEBUG"
							+ " -DNDK_DEBUG=0"

	.CompileFlags			+ " -Ofast -ffast-math"
							
	.Precompiled_SearchPaths+ " -L$precompiled_search_Paths$/$ConfigName$/arm64-v8a"
	
	.Output_Objects			= "$OutputPath$\$PlatformName$\$ConfigName$\Objects"
	.Output_StaticLibs		= "$OutputPath$\$PlatformName$\$ConfigName$\StaticLibs"
	.Output_SharedLibs		= "$OutputPath$\$PlatformName$\$ConfigName$\SharedLibs"
]

// *************************************************************************************** //
// ARM64
// Debug
.ARM64_Debug_Config =
[
	Using(.ARM64_Config)
	.ConfigName				= "Debug"
	.Defines				+ " -D_DEBUG"
							+ " -DDEBUG"

	.CompileFlags			+ " -O0"

	.Precompiled_SearchPaths+ " -L$precompiled_search_Paths$/$ConfigName$/arm64-v8a"

	.Output_Objects = "$OutputPath$/$PlatformName$/$ConfigName$/Objects"
	.Output_StaticLibs = "$OutputPath$/$PlatformName$/$ConfigName$/StaticLibs"
	.Output_SharedLibs = "$OutputPath$/$PlatformName$/$ConfigName$/SharedLibs"
]
// *************************************************************************************** //
// x86
// Release; Debug
.x86_Config =
[
	Using(.Base_Config)
	.PlatformName = "x86"
	.Defines + ""
							+ " -D__BUILD_x86__"
							+ " -D__CLANGx86__"
	.CompileFlags + ""
							+ " -target i686-none-linux-android"
							+ " -march=i686"
							+ " -m32"
							+ " -msse2"
							+ " -msse3"
							+ " -mssse3"
							+ " -mfpmath=sse"
							+ " -ffunction-sections"
							+ " -funwind-tables"
							+ " -fno-stack-protector"
							+ " -no-canonical-prefixes"
							+ " -fomit-frame-pointer"
							+ " -fno-strict-aliasing"
							+ " -fsigned-char"
	.Librarian = ""
							+ "$NDK_Root$/toolchains/x86-$NDK_ToolchainVersion$/prebuilt/windows-x86_64/bin/i686-linux-android-ar.exe"
	.ObjectCopyExecutable = ""
							+ "$NDK_Root$/toolchains/x86-$NDK_ToolchainVersion$/prebuilt/windows-x86_64/bin/i686-linux-android-objcopy.exe"
	.StripExecutable = ""
							+ "$NDK_Root$/toolchains/x86-$NDK_ToolchainVersion$/prebuilt/windows-x86_64/bin/i686-linux-android-strip.exe"
]

// *************************************************************************************** //
// x86
// Release
.x86_Release_Config =
[
	Using(.x86_Config)
	.ConfigName = "Release"
	.Defines + ""
							+ " -DANDROID_RELEASE"
							+ " -DNDEBUG"
	.IncludePaths + ""
							+ ' -I$NDK_Root$\sysroot\usr\include\i686-linux-android'
	.CompileFlags + ""
							+ " -w"
							+ " -O3"
	.Precompiled_SearchPaths + ""
							+ " -L$precompiled_search_Paths$/release/x86"
	.Output_Objects = "$OutputPath$/$PlatformName$/$ConfigName$/Objects"
	.Output_StaticLibs = "$OutputPath$/$PlatformName$/$ConfigName$/StaticLibs"
	.Output_SharedLibs = "$OutputPath$/$PlatformName$/$ConfigName$/SharedLibs"
]

// *************************************************************************************** //
// x86
// Debug
.x86_Debug_Config =
[
	Using(.x86_Config)
	.ConfigName = "Debug"
	.Defines + ""
							+ " -D_DEBUG"
							+ " -DDEBUG"
	.IncludePaths + ""
							+ ' -I$NDK_Root$\sysroot\usr\include\i686-linux-android'
	.Precompiled_SearchPaths + ""
							+ " -L$precompiled_search_Paths$/debug/x86"
	.Output_Objects = "$OutputPath$/$PlatformName$/$ConfigName$/Objects"
	.Output_StaticLibs = "$OutputPath$/$PlatformName$/$ConfigName$/StaticLibs"
	.Output_SharedLibs = "$OutputPath$/$PlatformName$/$ConfigName$/SharedLibs"
]

// *************************************************************************************** //
.Release_Configs =
{
	.ARM_Release_Config,
	.ARM64_Release_Config,
	.x86_Release_Config
}

// *************************************************************************************** //
.Debug_Configs =
{
	.ARM_Debug_Config,
	.ARM64_Debug_Config,
	.x86_Debug_Config
}

// *************************************************************************************** //
.All_Configs =
{
	.ARM_Release_Config,
	.ARM_Debug_Config,
	.ARM64_Release_Config,
	.ARM64_Debug_Config,
	.x86_Release_Config,
	.x86_Debug_Config
}
